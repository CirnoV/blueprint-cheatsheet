{"version":3,"sources":["pixi-component/Material.tsx","pixi-component/MaterialContainer.tsx","pixi-component/ShipBanner.tsx","pixi-component/ShipContainer.tsx","lib/sheetData.ts","pixi-component/CheatSheet.tsx","containers/pixi/CheatSheetContainer.tsx","modules/kanmusu.ts","lib/utils.ts","containers/input/KanmusuInputContainer.tsx","App.tsx","serviceWorker.ts","modules/index.ts","index.tsx"],"names":["Material","_ref","x","y","type","amount","react_default","a","createElement","react_pixi_module","image","concat","scale","text","style","TextStyle","fontSize","defaultProps","MaterialContainer","alpha","id","material","Object","entries","map","_ref2","idx","_ref3","slicedToArray","mat","pixi_component_Material","key","ShipBanner","exists","level","fill","undefined","pixi_component_MaterialContainer","ShipContainer","name","sheetData","kanmusu","fontFamily","fontWeight","sprite","materials","convert","only","kanmuses","filter","lv","String","split","length","Number","pixi_component_ShipBanner","CheatSheet","width","height","options","backgroundColor","preserveDrawingBuffer","pixi_component_ShipContainer","BB","CV","CA","CL","DD","connect","state","pixi_component_CheatSheet","update","createStandardAction","handlers","initialState","arguments","action","handler","createReducer","defineProperty","_","code","payload","slice","s","reduce","acc","shipId","shipData","mapDispatchToProps","onChange","useCallback","e","target","value","href","rel","placeholder","Container","styled","div","_templateObject","App","onClick","document","getElementById","toBlob","blob","fileName","dataUrl","window","URL","createObjectURL","event","createEvent","initMouseEvent","createElementNS","download","dispatchEvent","saveBlob","input_KanmusuInputContainer","pixi_CheatSheetContainer","Boolean","location","hostname","match","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9f80368.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Sprite, Text } from '@inlet/react-pixi';\r\nimport { TextStyle } from 'pixi.js';\r\n\r\ntype MaterialProps = {\r\n  x?: number;\r\n  y?: number;\r\n  type: 'airmat' | 'blueprint' | 'catapult' | 'devmat' | 'gunmat' | string;\r\n  amount?: number;\r\n};\r\n\r\nconst defaultProps = {\r\n  x: 0,\r\n  y: 0,\r\n  amount: 1\r\n};\r\n\r\n/**\r\n * w: 100px\r\n * h: 60px\r\n */\r\nconst Material: React.FC<MaterialProps> = ({ x, y, type, amount }) => (\r\n  <Container x={x} y={y}>\r\n    <Sprite y={8} image={`./img/item/${type}.png`} scale={0.6} />\r\n    <Text\r\n      x={47}\r\n      y={30}\r\n      text={`x${amount}`}\r\n      style={\r\n        new TextStyle({\r\n          fontSize: 21\r\n        })\r\n      }\r\n    />\r\n  </Container>\r\n);\r\n\r\nMaterial.defaultProps = defaultProps;\r\n\r\nexport default Material;\r\n","import React from 'react';\r\nimport { Container } from '@inlet/react-pixi';\r\nimport Material from './Material';\r\n\r\ntype MaterialContainerProps = {\r\n  x?: number;\r\n  y?: number;\r\n  alpha?: number;\r\n  id: number;\r\n  material: {\r\n    blueprint?: number;\r\n    airmat?: number;\r\n    catapult?: number;\r\n    devmat?: number;\r\n    gunmat?: number;\r\n  };\r\n};\r\n\r\nconst defaultProps = {\r\n  x: 0,\r\n  y: 0\r\n};\r\n\r\n/**\r\n * w: 100px\r\n * h: 60px\r\n */\r\nconst MaterialContainer: React.FC<MaterialContainerProps> = ({\r\n  x,\r\n  y,\r\n  alpha,\r\n  id,\r\n  material\r\n}) => (\r\n  <Container x={x} y={y} alpha={alpha}>\r\n    {Object.entries(material).map(([mat, amount], idx) => {\r\n      return (\r\n        <Material\r\n          x={72 * idx}\r\n          key={`${id}-${mat}`}\r\n          amount={amount}\r\n          type={mat}\r\n        />\r\n      );\r\n    })}\r\n  </Container>\r\n);\r\n\r\nMaterialContainer.defaultProps = defaultProps;\r\n\r\nexport default MaterialContainer;\r\n","import React from 'react';\r\nimport { Container, Sprite, Text } from '@inlet/react-pixi';\r\nimport { TextStyle } from 'pixi.js';\r\nimport MaterialContainer from './MaterialContainer';\r\n\r\ntype ShipBannerProps = {\r\n  x?: number;\r\n  y?: number;\r\n  id: number;\r\n  image: string;\r\n  level: number;\r\n  exists?: number;\r\n  material: {\r\n    blueprint?: number;\r\n    airmat?: number;\r\n    catapult?: number;\r\n    devmat?: number;\r\n    gunmat?: number;\r\n  };\r\n};\r\n\r\nconst defaultProps = {\r\n  x: 0,\r\n  y: 0,\r\n  exists: 0\r\n};\r\n\r\n/**\r\n * w: 300px\r\n * h: 60px\r\n */\r\nconst ShipBanner: React.FC<ShipBannerProps> = ({\r\n  x,\r\n  y,\r\n  id,\r\n  material,\r\n  image,\r\n  exists,\r\n  level\r\n}) => {\r\n  const alpha = exists! > 0 ? 0.3 : 1.0;\r\n  return (\r\n    <Container x={x} y={y}>\r\n      <Sprite image={`./img/banner/${image}`} alpha={alpha} />\r\n      {exists && exists > 1 ? (\r\n        <Text\r\n          x={244}\r\n          y={10}\r\n          text={`x${exists}`}\r\n          style={\r\n            new TextStyle({\r\n              fontSize: 24,\r\n              fill: ['#d32f2f']\r\n            })\r\n          }\r\n        />\r\n      ) : (\r\n        undefined\r\n      )}\r\n      <Text\r\n        x={244}\r\n        y={36}\r\n        text={`Lv.${level}`}\r\n        style={\r\n          new TextStyle({\r\n            fontSize: 21,\r\n            fill: ['#af4448']\r\n          })\r\n        }\r\n        alpha={alpha}\r\n      />\r\n      <MaterialContainer id={id} x={300} material={material} alpha={alpha} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nShipBanner.defaultProps = defaultProps;\r\n\r\nexport default ShipBanner;\r\n","import React from 'react';\r\nimport { Container, Text } from '@inlet/react-pixi';\r\nimport ShipBanner from './ShipBanner';\r\nimport { TextStyle } from 'pixi.js';\r\nimport { ShipData } from '../lib/sheetData';\r\nimport { KanmusuCount } from '../lib/utils';\r\n\r\ntype ShipContainerProps = {\r\n  x?: number;\r\n  y?: number;\r\n  name: string;\r\n  sheetData: ShipData[];\r\n  kanmusu: KanmusuCount;\r\n};\r\n\r\nconst defaultProps = {\r\n  x: 0,\r\n  y: 0\r\n};\r\n\r\n/**\r\n * w: 100px\r\n * h: 60px\r\n */\r\nconst ShipContainer: React.FC<ShipContainerProps> = ({\r\n  x,\r\n  y,\r\n  name,\r\n  sheetData,\r\n  kanmusu\r\n}) => {\r\n  return (\r\n    <Container x={x} y={y ? y + 8 : 8}>\r\n      <Text\r\n        x={80}\r\n        text={name}\r\n        style={\r\n          new TextStyle({\r\n            fontFamily: \"'Spoqa Han Sans', 'Spoqa Han Sans JP', sans-serif\",\r\n            fontSize: 21,\r\n            fontWeight: '700'\r\n          })\r\n        }\r\n      />\r\n      <Container y={32}>\r\n        {sheetData.map(\r\n          ({ id, sprite, level, materials, convert, only }, idx) => {\r\n            let exists = 0;\r\n            if (kanmusu[id]) {\r\n              const kanmuses = kanmusu[id]\r\n                .filter(lv => lv >= level)\r\n                .map(lv => String(lv).split('.'));\r\n              exists = kanmuses.filter(lv => !lv[1]).length;\r\n              if (convert) {\r\n                exists += kanmuses.filter(\r\n                  lv => lv[1] && Number(lv[1]) === convert\r\n                ).length;\r\n              }\r\n              if (only) {\r\n                exists = kanmuses.filter(lv => lv[1] && Number(lv[1]) === only)\r\n                  .length;\r\n              }\r\n            }\r\n            return (\r\n              <ShipBanner\r\n                key={id}\r\n                y={idx * 60}\r\n                id={id}\r\n                material={materials}\r\n                image={sprite}\r\n                level={level}\r\n                exists={exists}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nShipContainer.defaultProps = defaultProps;\r\n\r\nexport default ShipContainer;\r\n","import raw from './sheetData.json';\r\n\r\nexport type ShipData = {\r\n  id: number;\r\n  sprite: string;\r\n  level: number;\r\n  materials: {\r\n    blueprint?: number;\r\n    report?: number;\r\n    gunmat?: number;\r\n    airmat?: number;\r\n    catapult?: number;\r\n    devmat?: number;\r\n  };\r\n  convert?: number;\r\n  only?: number;\r\n};\r\n\r\nexport type SheetData = {\r\n  [key: string]: ShipData[];\r\n  BB: ShipData[];\r\n  CV: ShipData[];\r\n  CA: ShipData[];\r\n  CL: ShipData[];\r\n  DD: ShipData[];\r\n};\r\n\r\nexport const sheetData: SheetData = raw as SheetData;\r\n","import React from 'react';\r\nimport { Stage, Container } from '@inlet/react-pixi';\r\nimport ShipContainer from './ShipContainer';\r\nimport { KanmusuCount } from '../lib/utils';\r\nimport { sheetData } from '../lib/sheetData';\r\n\r\ntype CheatSheetProps = {\r\n  kanmusu: KanmusuCount;\r\n};\r\n\r\nconst CheatSheet: React.FC<CheatSheetProps> = ({ kanmusu }) => (\r\n  <Stage\r\n    id=\"cheatsheet\"\r\n    width={1170}\r\n    height={1510}\r\n    options={{ backgroundColor: 0xffffff, preserveDrawingBuffer: true }}\r\n  >\r\n    <Container>\r\n      <ShipContainer\r\n        name=\"- 戦艦 -\"\r\n        kanmusu={kanmusu}\r\n        sheetData={sheetData.BB}\r\n      />\r\n      <ShipContainer\r\n        y={700}\r\n        name=\"- 空母 -\"\r\n        kanmusu={kanmusu}\r\n        sheetData={sheetData.CV}\r\n      />\r\n    </Container>\r\n    <Container x={700}>\r\n      <ShipContainer\r\n        name=\"- 重巡 -\"\r\n        kanmusu={kanmusu}\r\n        sheetData={sheetData.CA}\r\n      />\r\n      <ShipContainer\r\n        y={400}\r\n        name=\"- 軽巡 -\"\r\n        kanmusu={kanmusu}\r\n        sheetData={sheetData.CL}\r\n      />\r\n      <ShipContainer\r\n        y={680}\r\n        name=\"- 駆逐 -\"\r\n        kanmusu={kanmusu}\r\n        sheetData={sheetData.DD}\r\n      />\r\n    </Container>\r\n  </Stage>\r\n);\r\n\r\nexport default CheatSheet;\r\n","import React from 'react';\r\nimport CheatSheet from '../../pixi-component/CheatSheet';\r\nimport { connect } from 'react-redux';\r\nimport { RootState } from '../../modules';\r\nimport { KanmusuCount } from '../../lib/utils';\r\n\r\ntype OwnProps = {};\r\ntype StateProps = {\r\n  kanmusu: KanmusuCount;\r\n};\r\ntype DispatchProps = {};\r\n\r\ntype CheatSheetContainerProps = OwnProps & StateProps & DispatchProps;\r\n\r\nconst CheatSheetContainer: React.FC<CheatSheetContainerProps> = ({\r\n  kanmusu\r\n}) => {\r\n  return <CheatSheet kanmusu={kanmusu} />;\r\n};\r\n\r\nexport default connect<StateProps, DispatchProps, OwnProps, RootState>(\r\n  state => ({\r\n    kanmusu: state.kanmusu\r\n  })\r\n)(CheatSheetContainer);\r\n","import { createStandardAction } from 'typesafe-actions';\r\nimport { createReducer, KanmusuCount, parseKanmusuList } from '../lib/utils';\r\n\r\nconst UPDATE = 'kanmusu/UPDATE';\r\n\r\nexport const update = createStandardAction(UPDATE)<string>();\r\n\r\nexport type KanmusuState = KanmusuCount;\r\n\r\ntype Update = ReturnType<typeof update>;\r\n\r\nconst initialState: KanmusuState = {};\r\nconst kanmusu = createReducer<KanmusuState>(\r\n  {\r\n    [UPDATE]: (_, action: Update) => {\r\n      return parseKanmusuList(action.payload);\r\n    }\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default kanmusu;\r\n","export type Handlers<T> = {\r\n  [type: string]: (state: T, action: any) => T;\r\n};\r\n\r\nexport function createReducer<S>(handlers: Handlers<S>, initialState: S) {\r\n  return (state: S = initialState, action: any) => {\r\n    const handler = handlers[action.type];\r\n    if (!handler) return state;\r\n    return handler(state, action);\r\n  };\r\n}\r\n\r\nexport type KanmusuCount = {\r\n  [key: string]: number[];\r\n};\r\n\r\nexport function parseKanmusuList(code: string): KanmusuCount {\r\n  const ver = code.slice(0, 2);\r\n  if (ver === '.2') {\r\n    return code\r\n      .slice(3)\r\n      .split('|')\r\n      .map(s => s.split(':'))\r\n      .reduce<KanmusuCount>((acc, [shipId, shipData]) => {\r\n        acc[shipId] = shipData.split(',').map(Number);\r\n        return acc;\r\n      }, {});\r\n  }\r\n  return {};\r\n}\r\n\r\nexport function saveBlob(blob: Blob, fileName: string) {\r\n  let url = window.URL;\r\n  let dataUrl = url.createObjectURL(blob);\r\n  let event = document.createEvent('MouseEvents');\r\n  event.initMouseEvent(\r\n    'click',\r\n    true,\r\n    false,\r\n    window,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    0,\r\n    null\r\n  );\r\n  let a = document.createElementNS(\r\n    'http://www.w3.org/1999/xhtml',\r\n    'a'\r\n  ) as HTMLElement & any;\r\n  a.href = dataUrl;\r\n  a.download = fileName;\r\n  a.dispatchEvent(event);\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RootState } from '../../modules';\r\nimport { KanmusuCount } from '../../lib/utils';\r\nimport { update } from '../../modules/kanmusu';\r\n\r\nconst mapDispatchToProps = {\r\n  update\r\n};\r\n\r\ntype OwnProps = {};\r\ntype StateProps = {\r\n  kanmusu: KanmusuCount;\r\n};\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\ntype KanmusuInputContainerProps = OwnProps & StateProps & DispatchProps;\r\n\r\nconst KanmusuInputContainer: React.FC<KanmusuInputContainerProps> = ({\r\n  kanmusu,\r\n  update\r\n}) => {\r\n  const onChange = useCallback(e => update(e.target.value), [update]);\r\n  return (\r\n    <div>\r\n      <a\r\n        href=\"http://kancolle-calc.net/kanmusu_list.html\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        kanmusu list\r\n      </a>\r\n      {': '}\r\n      <input onChange={onChange} placeholder=\".2|1:[...]\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect<StateProps, DispatchProps, OwnProps, RootState>(\r\n  state => ({\r\n    kanmusu: state.kanmusu\r\n  }),\r\n  mapDispatchToProps\r\n)(KanmusuInputContainer);\r\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport CheatSheetContainer from './containers/pixi/CheatSheetContainer';\nimport KanmusuInputContainer from './containers/input/KanmusuInputContainer';\nimport { saveBlob } from './lib/utils';\n\nconst Container = styled.div`\n  padding: 8px;\n`;\n\nconst App: React.FC = () => {\n  const onClick = useCallback(() => {\n    const cheatsheet = document.getElementById(\n      'cheatsheet'\n    ) as HTMLCanvasElement;\n    cheatsheet.toBlob(blob => {\n      if (blob) {\n        saveBlob(blob, 'cheatsheet');\n      }\n    });\n  }, []);\n  return (\n    <Container>\n      <a\n        href=\"https://github.com/CirnoV/blueprint-cheatsheet\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Github\n      </a>\n      <br />\n      <br />\n      <KanmusuInputContainer />\n      <br />\n      <button onClick={onClick}>Download</button>\n      <br />\n      <CheatSheetContainer />\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport kanmusu, { KanmusuState } from './kanmusu';\r\n\r\nexport type RootState = {\r\n  kanmusu: KanmusuState;\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  kanmusu\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './typography.css';\nimport 'normalize.css';\nimport './index.css';\nimport rootReducer from './modules';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}